//1.



#include <stdio.h>

int main() {
    int a[3];
    {
scanf("%d%d%d", &a[0],&a[1],&a[2]);
if(a[0]>=a[1] && a[0]>=a[2]){
    if(a[1]>a[2]){printf("%d", (a[0]-a[1])+(a[1]-a[2]));}
    else{printf("%d", (a[0]-a[2])+(a[2]-a[1]));}
}
else if(a[1]>=a[0] && a[1]>=a[2]){
    if(a[0]>a[2]){printf("%d", (a[1]-a[0])+(a[0]-a[2]));}
    else{printf("%d", (a[1]-a[2])+(a[2]-a[0]));}
}
else if(a[2]>=a[0] && a[2]>=a[1]){
    if(a[0]>a[1]){printf("%d", (a[2]-a[0])+(a[0]-a[1]));}
    else {printf("%d", (a[2]-a[1])+(a[1]-a[0]));}
}
}
    return 0;
}


//2.


#include <stdio.h>
#include <stdlib.h>
int main() {
       int a[3],flag=0, i=0, sum=0;
       
    for (i=0; i<3; i++){
    scanf("%d", &a[i]);
    }

    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < i+1; j++) {
            if (a[j] > a[i]) {
            int temp;
            temp = a[i];
            a[i] = a[j];
            a[j] = temp;
            }
        }
    }
printf("%d", (a[2]-a[1])+(a[1]-a[0]));
    return 0;
}


//3.


#include <stdio.h>
#include <math.h>

int main() {
    int a[3];
    {
scanf("%d%d%d", &a[0],&a[1],&a[2]);
if(a[0]>=a[1] && a[0]>=a[2]){
    if(a[1]>a[2]){printf("%d", (a[0]-a[1])+abs(a[1]-a[2]));}
    else{printf("%d", (a[0]-a[2])+abs(a[1]-a[2]));}
}
else if(a[1]>=a[0] && a[1]>=a[2]){
    if(a[0]>a[2]){printf("%d", (a[1]-a[0])+abs(a[0]-a[2]));}
    else{printf("%d", (a[1]-a[2])+abs(a[0]-a[2]));}
}
else if(a[2]>=a[0] && a[2]>=a[1]){
    if(a[0]>a[1]){printf("%d", (a[2]-a[0])+abs(a[0]-a[1]));}
    else {printf("%d", (a[2]-a[1])+abs(a[0]-a[1]));}
}
}
    return 0;
}





//4. just learned about #define and it's some sort of super power



#include <stdio.h>
#include <math.h>
#define spew() printf("%d", d)
#define eat() scanf("%d%d%d", &a[0], &a[1], &a[2])

int main() {
    
    int a[3], d;
    
    eat();

if(a[0]>=a[1] && a[0]>=a[2]){
    
    if(a[1]>a[2])
        d = (a[0]-a[1])+abs(a[1]-a[2]);
        
    else
        d = (a[0]-a[2])+abs(a[1]-a[2]);
}

else if(a[1]>=a[0] && a[1]>=a[2]){
    
    if(a[0]>a[2])
        d = (a[1]-a[0])+abs(a[0]-a[2]);

    else
        d= (a[1]-a[2])+abs(a[0]-a[2]);
}
else if(a[2]>=a[0] && a[2]>=a[1]){
    
    if(a[0]>a[1])
        d = (a[2]-a[0])+abs(a[0]-a[1]);
  
    else 
        d = (a[2]-a[1])+abs(a[0]-a[1]);
}

spew();

    return 0;
}
