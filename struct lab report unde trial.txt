#include <stdio.h>

struct Course{
    float mid;
    float final_;
    float performance;
};

struct Student{
    char first_name[101];
    char last_name[101];
    char department[5];
    short int roll;
    struct Course course1;
    struct Course course2;
    struct Course course3;
    struct Course course4;
};

void bubble_sort(int a[], int n){
    for(int i=0; i<n-1; i++){
        for(int j=0; j<n-i-1; j++){
            if(a[j]>a[j+1]){
                int temp = a[j];
                a[j] = a[j+1];
                a[j+1] = temp;
            }
        }
    }
}

int smallest(int a[], int lb, int n){
    int least = a[lb], least_indx = lb;
    for(int i=lb; i<n; i++){
        if(least>a[i]){
            least = a[i];
            least_indx = i;
        }
    }
    return least_indx;
}
void selection_sort(int a[], int lb, int n){
    if(lb>=n) return;
    int least_indx = smallest(a, lb, n);
    int temp = a[lb];
    a[lb] = a[least_indx];
    a[least_indx] = temp;
    selection_sort(a, lb+1, n);
}

void insertion_sort(int a[], int n){
    for(int i=1; i<n; i++){
        for(int j=i-1; j>=0 && a[j+1]<a[j]; j--){
            int tmp = a[j];
            a[j] = a[j+1];
            a[j+1] = tmp;
        }
    }
}

void binary_search(int a[], int n, int roll){
    int count = 0, m, l=0, h = n, d = roll;
    while(l<=h){
        m=(l+h)/2;
        count++;
        if(a[m]==d){
            printf("index: %d" , m);
            break;
        }
        else if (a[m]<d) l=m+1;
        else h=m-1;
    }
}

void linear_search(int a[], int n, int roll){
    for(--n; n>=0; n--){
        if(a[n] == roll){
            break;
        }
    }
}

int main(){

    struct Student std[5];
    int line = 1, i=0;

    float cgpa[5];
    char cgpa_str[5][3];
    FILE *fptr;

    fptr = fopen("student_result_detail.txt","r");

    if(fptr == 0)
       {
          printf("Error!");
          exit(1);
       }


    while (fscanf(fptr, "%s %s %hd %s %f %f %f %f %f %f %f %f %f %f %f %f\n", std[i].first_name, std[i].last_name, &std[i].roll, std[i].department, &std[i].course1.mid, &std[i].course1.performance, &std[i].course1.final_, &std[i].course2.mid, &std[i].course2.performance, &std[i].course2.final_, &std[i].course3.mid, &std[i].course3.performance, &std[i].course3.final_, &std[i].course4.mid, &std[i].course4.performance, &std[i].course4.final_) == 16) {

        i++;

        if (line == 5){

            break;
        }
        line++;
    }

    for (int i=0; i<5; i++){

        printf("final_ grade:  ");

        cgpa[i] =((((std[i].course1.mid+std[i].course2.mid+std[i].course3.mid+std[i].course4.mid)*0.3)+((std[i].course1.final_+std[i].course2.final_+std[i].course3.final_+std[i].course4.final_)*0.5)+((std[i].course1.performance+std[i].course2.performance+std[i].course3.performance+std[i].course4.performance)*0.29)))/4;

        if(cgpa[i]>=80){ printf("A+"); strcpy(cgpa_str[i], "A+");}
        else if(cgpa[i]>=75 && cgpa[i]<80){ printf("A"); strcpy(cgpa_str[i], "A");}
        else if(cgpa[i]>=70 && cgpa[i]<75){ printf("A-"); strcpy(cgpa_str[i], "A-");}
        else if(cgpa[i]>=55 && cgpa[i]<70){ printf("B"); strcpy(cgpa_str[i], "B");}
        else if(cgpa[i]>=45 && cgpa[i]<55){ printf("C"); strcpy(cgpa_str[i], "C");}
        else if(cgpa[i]>=40 && cgpa[i]<45){ printf("D"); strcpy(cgpa_str[i], "D");}
        else{  printf("F"); strcpy(cgpa_str[i], "F");}

        printf("\nName: %s %s\nDepartment: %s\nRoll: %hd\n\n", std[i].first_name, std[i].last_name, std[i].department, std[i].roll);

    }

    fclose(fptr);
    return 0;
}
